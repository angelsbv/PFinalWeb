@model PFinalWeb.Models.ResetPasswordModel

@{
    ViewBag.Title = "Establece tu nueva clave";
}

<link rel="stylesheet" href="~/Content/loginsbc.css" />
<link rel="stylesheet" href="~/Content/Resetpw.css" />
<div class="container loginsbc-container">
    <div class="row _sag3">
        <div class="col s12 _sag4">
            <div id="content" class="m2">
                <div class="light-blue darken-2 login-header">
                    <span class="smallmoon">Establece tu nueva contrase&ntilde;a</span>
                </div>
                @if (TempData["Msg"] != null && TempData["Msg"] != "")
                {
                    <div class="valign-wrapper div-alert-parent" style="width:100%;">
                        <div class="smallsmile">
                            @*CLASE PULSE PARA TEST, PUEDE SER REMOVIDA*@
                        <p class="smallhot">@TempData["Msg"]</p>
                        </div>
                    </div>
                }
                <form action="~/admin/resetpw" method="POST" class="col s12 offset-s1">
                    @Html.AntiForgeryToken()
                    <input value="@Model.ResetCode" name="ResetCode" hidden/>
                    <div class="row">
                        <div class="input-field col s10">
                            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { autocapitalize = "off", autocomplete = "off" } })
                            <label for="NewPassword">Nueva contrase&ntilde;a</label>
                        </div>
                        <div class="input-field col s10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { autocapitalize = "off", autocomplete = "off" } })
                            <label for="ConfirmPassword">Contrase&ntilde;a</label>
                        </div>
                        <div class="col s10">
                            <div class="col s6">

                            </div>
                            <div class="col s5 right">
                                <button type="submit" value="Establecer" 
                                        onclick="M.toast({html: 'Esperamos que no te vuelva a ocurrir'})"
                                        class="btn waves-effect waves-teal white-text blue" style="width:100%">
                                    Establecer
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script defer>document.querySelector('main').classList.add('valign-wrapper');</script>
<script defer>
    var divAlertParent = document.querySelector('.div-alert-parent');
    if (divAlertParent != null)
    {
        document.querySelector('form').style.marginTop = '5px';
        document.querySelectorAll('.input-field').forEach(t => { t.style.marginTop = '0' })
        document.querySelector("#content").style.marginTop = '15px'
    setTimeout(() => {
        document.querySelector('form').style.marginTop = '25px'
        document.querySelectorAll('.input-field').forEach(t => { t.style.marginTop = '1rem'; })
        document.querySelector('.div-alert-parent').remove();
        if (document.querySelector('.p-alert').innerHTML == 'La nueva contrase&ntilde;a ha sido establecida correctamente.') {
            location.href = location.origin;
        } else if (document.querySelector('.p-alert').innerHTML == 'El c&oacute;digo no es v&aacute;lido.') {
            location.href = location.origin;
        }
    }, 10124)
    }
</script>
@*<script>
form = document.querySelector('form')
form.addEventListener('submit', async (e) => {
e.preventDefault();
let formData = new FormData(form)
console.log(formData)
var settings = {
method: 'POST',
body: formData
}
try {
var res = await fetch('@Url.Action("Login")', settings)
console.log(res);
} catch (e) {
console.log(e)
}

});

</script>*@
